openapi: 3.0.0
paths:
  /health:
    get:
      operationId: AppController_healthCheck
      summary: Health check endpoint
      parameters: []
      responses:
        '200':
          description: Returns server health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Success
                  data:
                    type: string
                    example: Server is up and running!
      tags:
        - System
  /users:
    post:
      operationId: UserController_createUser
      summary: Create a new user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserReqDto'
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Success
                  data:
                    type: object
                    example: {}
      tags: &ref_0
        - Users
  /users/password:
    patch:
      operationId: UserController_changePassword
      summary: Change user password
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordReqDto'
      responses:
        '200':
          description: Password changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Success
                  data:
                    type: object
                    example: {}
      tags: *ref_0
      security:
        - bearer: []
  /users/delete:
    post:
      operationId: UserController_deleteUser
      summary: Delete user account
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserReqDto'
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Success
                  data:
                    type: object
                    example: {}
      tags: *ref_0
      security:
        - bearer: []
  /users/login:
    post:
      operationId: UserController_login
      summary: User login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginReqDto'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Success
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      tags: *ref_0
  /tasks:
    post:
      operationId: TaskController_createTask
      summary: Create a new task
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskReqDto'
      responses:
        '200':
          description: Task created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Success
                  data:
                    type: object
                    properties:
                      uuid:
                        type: string
                        example: 123e4567-e89b-12d3-a456-426614174000
      tags: &ref_1
        - Tasks
      security: &ref_2
        - bearer: []
    get:
      operationId: TaskController_getTasks
      summary: Get all tasks
      parameters: []
      responses:
        '200':
          description: Tasks retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Success
                  data:
                    type: object
                    properties:
                      tasks:
                        type: array
                        items:
                          type: object
                          properties:
                            uuid:
                              type: string
                              example: 123e4567-e89b-12d3-a456-426614174000
                            title:
                              type: string
                              example: Complete project documentation
                            description:
                              type: string
                              example: Write detailed documentation for the project
                            createdAt:
                              type: string
                              example: '2024-01-01T00:00:00.000Z'
                            updatedAt:
                              type: string
                              example: '2024-01-01T00:00:00.000Z'
      tags: *ref_1
      security: *ref_2
  /tasks/{uuid}:
    get:
      operationId: TaskController_getTaskByUuid
      summary: Get task by UUID
      parameters:
        - name: uuid
          required: true
          in: path
          description: Task UUID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      responses:
        '200':
          description: Task retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Success
                  data:
                    type: object
                    properties:
                      uuid:
                        type: string
                        example: 123e4567-e89b-12d3-a456-426614174000
                      title:
                        type: string
                        example: Complete project documentation
                      description:
                        type: string
                        example: Write detailed documentation for the project
                      createdAt:
                        type: string
                        example: '2024-01-01T00:00:00.000Z'
                      updatedAt:
                        type: string
                        example: '2024-01-01T00:00:00.000Z'
      tags: *ref_1
      security: *ref_2
    patch:
      operationId: TaskController_updateTask
      summary: Update task
      parameters:
        - name: uuid
          required: true
          in: path
          description: Task UUID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskReqDto'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Success
                  data:
                    type: object
                    properties:
                      uuid:
                        type: string
                        example: 123e4567-e89b-12d3-a456-426614174000
                      title:
                        type: string
                        example: Complete project documentation
                      description:
                        type: string
                        example: Write detailed documentation for the project
                      createdAt:
                        type: string
                        example: '2024-01-01T00:00:00.000Z'
                      updatedAt:
                        type: string
                        example: '2024-01-01T00:00:00.000Z'
      tags: *ref_1
      security: *ref_2
    delete:
      operationId: TaskController_deleteTask
      summary: Delete task
      parameters:
        - name: uuid
          required: true
          in: path
          description: Task UUID
          schema:
            example: 123e4567-e89b-12d3-a456-426614174000
            type: string
      responses:
        '200':
          description: Task deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Success
                  data:
                    type: object
                    example: {}
      tags: *ref_1
      security: *ref_2
info:
  title: Task Management System API
  description: The Task Management System API description
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    CreateUserReqDto:
      type: object
      properties:
        email:
          type: string
          description: User's email address
          example: user@example.com
        username:
          type: string
          description: User's username
          example: john_doe
          minLength: 1
          maxLength: 100
        password:
          type: string
          description: User's password
          example: password123
          minLength: 8
          maxLength: 100
      required:
        - email
        - username
        - password
    ChangePasswordReqDto:
      type: object
      properties:
        oldPassword:
          type: string
          description: Current password
          example: oldPassword123
          minLength: 8
          maxLength: 100
        newPassword:
          type: string
          description: New password
          example: newPassword123
          minLength: 8
          maxLength: 100
      required:
        - oldPassword
        - newPassword
    DeleteUserReqDto:
      type: object
      properties:
        password:
          type: string
          description: User's password for verification
          example: password123
          minLength: 8
          maxLength: 100
      required:
        - password
    LoginReqDto:
      type: object
      properties:
        email:
          type: string
          description: User's email address
          example: user@example.com
        password:
          type: string
          description: User's password
          example: password123
          minLength: 8
          maxLength: 100
      required:
        - email
        - password
    CreateTaskReqDto:
      type: object
      properties:
        title:
          type: string
          description: Task title
          example: Complete project documentation
          minLength: 1
          maxLength: 255
        description:
          type: string
          description: Task description
          example: Write detailed documentation for the project
          minLength: 1
          maxLength: 500
      required:
        - title
    UpdateTaskReqDto:
      type: object
      properties:
        title:
          type: string
          description: Task title
          example: Complete project documentation
          minLength: 1
          maxLength: 255
        description:
          type: string
          description: Task description
          example: Write detailed documentation for the project
          minLength: 1
          maxLength: 500
        status:
          type: string
          description: Task status
          example: inProgress
          enum:
            - pending
            - inProgress
            - completed
      required:
        - title
